<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Exception;

use App\Models\User;
use App\Models\Quiz;
use App\Models\Subject;

class QuizController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
                
        //get subject whose quizzes have been generated by current teacher
        $id=session('userId');
        $teacher=User::findOrFail($id)->teacher;
        //$teacher=$user->teacher;
        $subjectIds=Quiz::where('teacherId',$teacher->id)
        ->distinct('subjectId')
        ->pluck('subjectId')
        ->toArray();

        $subjectsHavingQuiz=Subject::whereIn('id', $subjectIds)->get();
        return view('quizzes.index', compact('teacher','subjectsHavingQuiz'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
        $subjects=Subject::all();
        return view("quizzes.create",compact('subjects'));
        
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        // 
        $request->validate([
            'subjectId' =>'required',
            'description' => 'required',
        ]);
        
        $teacher=User::findOrFail(session('userId'))->teacher;
        $quiz=new Quiz([
            'teacherId'=>$teacher->id,
            'subjectId'=>$request->subjectId,
            'description'=>$request->description,

        ]);

        $quiz->save();
        
        session(['quizId'=>$quiz->id]);
        return redirect('./quizzes/'.$quiz->id);
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
        $quiz=Quiz::findOrFail($id);
        return view("quizzes.show", compact('quiz'));


    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
        $quiz=Quiz::findOrFail($id);
        try{
            //try to delete
            $quiz->delete();
            return response()->json(['msg'=>"successfully removed"]);
        }catch(Exception $ex){
            return response()->json(['msg'=>$ex->getMessage()]);
        }
    }

    public function stat(Request $request){
        $request->validate([
            'quizId' =>'required',
        ]);
        $quizId=$request->quizId;

        $quiz=Quiz::findOrFail($quizId);
        return response()->json([
            'numOfAttempts'=>$quiz->attempts->count(),
            'avg'=>$quiz->avg(),
            'total'=>$quiz->marks(),
            'percent'=>round($quiz->avg()/$quiz->marks()*100,1),
        ]);
    }
    
}
